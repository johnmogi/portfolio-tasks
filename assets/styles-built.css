/*! tailwindcss v4.1.13 | MIT License | https://tailwindcss.com */
@layer properties;
.visible {
  visibility: visible;
}
.absolute {
  position: absolute;
}
.fixed {
  position: fixed;
}
.relative {
  position: relative;
}
.sticky {
  position: sticky;
}
.z-50 {
  z-index: 50;
}
.col-12 {
  grid-column: 12;
}
.col-span-full {
  grid-column: 1 / -1;
}
.container {
  width: 100%;
}
.m-auto {
  margin: auto;
}
.mx-auto {
  margin-inline: auto;
}
.me-auto {
  margin-inline-end: auto;
}
.ml-auto {
  margin-left: auto;
}
.block {
  display: block;
}
.flex {
  display: flex;
}
.grid {
  display: grid;
}
.hidden {
  display: none;
}
.inline {
  display: inline;
}
.inline-flex {
  display: inline-flex;
}
.table {
  display: table;
}
.max-h-\[90vh\] {
  max-height: 90vh;
}
.w-full {
  width: 100%;
}
.min-w-\[200px\] {
  min-width: 200px;
}
.min-w-full {
  min-width: 100%;
}
.flex-1 {
  flex: 1;
}
.cursor-pointer {
  cursor: pointer;
}
.resize-none {
  resize: none;
}
.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}
.flex-col {
  flex-direction: column;
}
.items-center {
  align-items: center;
}
.items-start {
  align-items: flex-start;
}
.justify-between {
  justify-content: space-between;
}
.justify-center {
  justify-content: center;
}
.justify-end {
  justify-content: flex-end;
}
.divide-y {
  :where(& > :not(:last-child)) {
    --tw-divide-y-reverse: 0;
    border-bottom-style: var(--tw-border-style);
    border-top-style: var(--tw-border-style);
    border-top-width: calc(1px * var(--tw-divide-y-reverse));
    border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  }
}
.overflow-hidden {
  overflow: hidden;
}
.overflow-x-auto {
  overflow-x: auto;
}
.overflow-y-auto {
  overflow-y: auto;
}
.rounded-full {
  border-radius: calc(infinity * 1px);
}
.border {
  border-style: var(--tw-border-style);
  border-width: 1px;
}
.border-0 {
  border-style: var(--tw-border-style);
  border-width: 0px;
}
.border-t {
  border-top-style: var(--tw-border-style);
  border-top-width: 1px;
}
.border-b {
  border-bottom-style: var(--tw-border-style);
  border-bottom-width: 1px;
}
.border-l-0 {
  border-left-style: var(--tw-border-style);
  border-left-width: 0px;
}
.border-l-4 {
  border-left-style: var(--tw-border-style);
  border-left-width: 4px;
}
.text-center {
  text-align: center;
}
.text-left {
  text-align: left;
}
.whitespace-nowrap {
  white-space: nowrap;
}
.uppercase {
  text-transform: uppercase;
}
.line-through {
  text-decoration-line: line-through;
}
.opacity-75 {
  opacity: 75%;
}
.filter {
  filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
}
.transition-all {
  transition-property: all;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.transition-colors {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.duration-200 {
  --tw-duration: 200ms;
  transition-duration: 200ms;
}
.duration-300 {
  --tw-duration: 300ms;
  transition-duration: 300ms;
}
.focus\:border-transparent {
  &:focus {
    border-color: transparent;
  }
}
.focus\:ring-2 {
  &:focus {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
}
.disabled\:cursor-not-allowed {
  &:disabled {
    cursor: not-allowed;
  }
}
.disabled\:opacity-50 {
  &:disabled {
    opacity: 50%;
  }
}
.is-done {
  text-decoration: line-through;
  opacity: 0.7;
}
.category-badge {
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
}
.category-dot {
  width: 12px;
  height: 12px;
  border-radius: 50%;
  display: inline-block;
}
.overdue {
  color: #dc3545;
  font-weight: bold;
}
.overdue::after {
  content: " ⚠️";
  font-size: 0.8em;
}
.dataTables_empty {
  text-align: center;
  padding: 2rem;
  color: #6c757d;
}
.view-container {
  display: none;
}
.view-container.active {
  display: block;
}
.task-card {
  transition: transform 0.2s, box-shadow 0.2s;
  border: none;
  border-radius: 12px;
  margin-bottom: 1.5rem;
  box-shadow: 0 2px 8px rgba(0,0,0,0.1);
}
.task-card:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 16px rgba(0,0,0,0.15);
}
.task-card.completed {
  opacity: 0.7;
  background-color: #f8f9fa;
}
.task-card-header {
  background: linear-gradient(135deg, var(--card-color), var(--card-color-light));
  color: white;
  border-radius: 12px 12px 0 0;
  padding: 1rem;
  position: relative;
}
.task-card-header::after {
  content: '';
  position: absolute;
  bottom: -8px;
  left: 20px;
  width: 16px;
  height: 16px;
  background: var(--card-color);
  transform: rotate(45deg);
}
.task-card-body {
  padding: 1.5rem;
}
.task-card-title {
  font-size: 1.25rem;
  font-weight: 600;
  margin-bottom: 0.5rem;
  text-decoration: none;
}
.task-card.completed .task-card-title {
  text-decoration: line-through;
}
.task-card-category {
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
  font-size: 0.875rem;
  opacity: 0.9;
  margin-bottom: 1rem;
}
.task-card-description {
  color: #6c757d;
  margin-bottom: 1rem;
  line-height: 1.5;
}
.task-card-footer {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding-top: 1rem;
  border-top: 1px solid #e9ecef;
}
.task-card-time {
  font-size: 0.875rem;
  color: #6c757d;
}
.task-card-actions {
  display: flex;
  gap: 0.5rem;
}
.task-card-btn {
  padding: 0.25rem 0.75rem;
  font-size: 0.875rem;
  border-radius: 6px;
}
.task-card-status {
  position: absolute;
  top: 1rem;
  right: 1rem;
  width: 24px;
  height: 24px;
}
.task-list-item {
  border: none;
  border-radius: 8px;
  margin-bottom: 0.5rem;
  transition: background-color 0.2s;
}
.task-list-item:hover {
  background-color: #f8f9fa;
}
.task-list-item.completed {
  background-color: #f8f9fa;
  opacity: 0.8;
}
.task-list-item.completed .task-list-title {
  text-decoration: line-through;
}
.task-list-content {
  display: flex;
  align-items: center;
  padding: 1rem;
  width: 100%;
}
.task-list-status {
  width: 40px;
  flex-shrink: 0;
}
.task-list-info {
  flex-grow: 1;
  margin-left: 1rem;
}
.task-list-title {
  font-weight: 600;
  margin-bottom: 0.25rem;
}
.task-list-meta {
  display: flex;
  align-items: center;
  gap: 1rem;
  font-size: 0.875rem;
  color: #6c757d;
}
.task-list-actions {
  flex-shrink: 0;
  margin-left: 1rem;
}
.task-list-btn {
  padding: 0.25rem 0.5rem;
  font-size: 0.875rem;
  margin-left: 0.25rem;
}
.btn-group .btn {
  border-radius: 6px !important;
  margin: 0 2px;
}
.btn-group .btn.active {
  background-color: #007bff;
  border-color: #007bff;
  color: white;
}
.btn-group .btn:not(.active) {
  background-color: white;
  border-color: #dee2e6;
  color: #007bff;
}
.btn-group .btn:hover:not(.active) {
  background-color: #f8f9fa;
  border-color: #007bff;
}
.time-tracker {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  margin-top: 0.5rem;
}
.time-display {
  font-size: 0.875rem;
  color: #6c757d;
  display: flex;
  align-items: center;
  gap: 0.25rem;
}
.time-input {
  width: 80px;
  font-size: 0.875rem;
  padding: 0.25rem;
  border-radius: 4px;
  border: 1px solid #dee2e6;
}
.timer-btn {
  padding: 0.25rem 0.5rem;
  font-size: 0.75rem;
  border-radius: 4px;
  border: none;
  cursor: pointer;
}
.timer-btn.start {
  background-color: #28a745;
  color: white;
}
.timer-btn.stop {
  background-color: #dc3545;
  color: white;
}
.timer-btn.reset {
  background-color: #ffc107;
  color: #212529;
}
@media (max-width: 768px) {
  .task-card {
    margin-bottom: 1rem;
  }
  .task-card-header, .task-card-body {
    padding: 1rem;
  }
  .task-card-footer {
    flex-direction: column;
    gap: 0.75rem;
    align-items: stretch;
  }
  .task-card-actions {
    justify-content: center;
  }
  .btn-group {
    flex-wrap: wrap;
  }
  .btn-group .btn {
    margin: 2px;
    font-size: 0.875rem;
    padding: 0.375rem 0.75rem;
  }
}
.dark-mode {
  background-color: #121212 !important;
  color: #e0e0e0 !important;
}
.dark-mode .card {
  background-color: #1e1e1e !important;
  border-color: #333 !important;
  color: #e0e0e0 !important;
}
.dark-mode .card-body {
  background-color: #1e1e1e !important;
  color: #e0e0e0 !important;
}
.dark-mode .table {
  background-color: #1e1e1e !important;
  color: #e0e0e0 !important;
  border-color: #333 !important;
}
.dark-mode .table thead th {
  background-color: #2d2d2d !important;
  border-color: #333 !important;
  color: #e0e0e0 !important;
}
.dark-mode .table tbody tr {
  background-color: #1e1e1e !important;
  border-color: #333 !important;
}
.dark-mode .table tbody tr:hover {
  background-color: #2d2d2d !important;
}
.dark-mode .list-group-item {
  background-color: #1e1e1e !important;
  border-color: #333 !important;
  color: #e0e0e0 !important;
}
.dark-mode .modal-content {
  background-color: #1e1e1e !important;
  border-color: #333 !important;
  color: #e0e0e0 !important;
}
.dark-mode .modal-header, .dark-mode .modal-footer {
  border-color: #333 !important;
}
.dark-mode .form-control {
  background-color: #2d2d2d !important;
  border-color: #444 !important;
  color: #e0e0e0 !important;
}
.dark-mode .form-control:focus {
  background-color: #2d2d2d !important;
  border-color: #007bff !important;
  color: #e0e0e0 !important;
}
.dark-mode .form-select {
  background-color: #2d2d2d !important;
  border-color: #444 !important;
  color: #e0e0e0 !important;
}
.dark-mode .badge {
  background-color: #444 !important;
  color: #e0e0e0 !important;
}
.dark-mode .text-muted {
  color: #888 !important;
}
.dark-mode .btn-outline-light {
  color: #e0e0e0 !important;
  border-color: #e0e0e0 !important;
}
.dark-mode .btn-outline-light:hover {
  background-color: #e0e0e0 !important;
  color: #000 !important;
}
.dark-mode .navbar-dark {
  background-color: #1a1a1a !important;
}
.dark-mode .dataTables_wrapper .dataTables_info, .dark-mode .dataTables_wrapper .dataTables_paginate, .dark-mode .dataTables_wrapper .dataTables_length select {
  color: #e0e0e0 !important;
}
.dark-mode .dataTables_wrapper .dataTables_paginate .paginate_button {
  color: #e0e0e0 !important;
}
.dark-mode .dataTables_wrapper .dataTables_paginate .paginate_button:hover {
  background-color: #333 !important;
  color: #fff !important;
}
.dark-mode .time-tracker {
  background-color: #2d2d2d !important;
  border-radius: 4px;
  padding: 0.5rem;
}
.dark-mode .timer-btn {
  background-color: #444 !important;
  color: #e0e0e0 !important;
  border: none !important;
}
.dark-mode .timer-btn:hover {
  background-color: #555 !important;
  color: #fff !important;
}
.dark-mode .view-container {
  animation: fadeInDark 0.3s ease-in-out;
}
@keyframes fadeInDark {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
@property --tw-divide-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-divide-y-reverse: 0;
      --tw-border-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-duration: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
    }
  }
}
